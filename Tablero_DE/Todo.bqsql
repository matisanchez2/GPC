------------------------------------------
-------  Vintage To Excel -------------
------------------------------------------
------------ TABLAS POR FLAG ------------
-- 0. CONSOLIDADO  
-- 1. ONLINE - INSTORE
-- 2- Baby OFFER
-- 1. FLAG DEVICE
-- 2. REGLA BAU Ó REGLA FLEX
-- 3. CHURN RATING
-- 4. BORROWER TYPE
-- 5- EO/FO
-- 6- SEGMENTACIÓN TPV
-- 7- ONLINE
--FALTAN
--  CAPS, CONSUMER CONVIVENCIA, 

-- 0. CONSOLIDADO
CREATE OR REPLACE TABLE
    SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_CONSOLIDADO_0 AS
SELECT
  MES_ORIG,
  COUNT(*) AS CANTIDAD,
  CAST(SUM(CRD_CREDIT_AMOUNT) AS BIGINT) AS MONTO_ORIGINADO,
  ROUND(AVG(PLAZO),2) AS PLAZO_PROMEDIO,
  ROUND(AVG(TNA),2) AS TASA_PROMEDIO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(50)]  AS MEDIANA_MONTO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(25)]  AS MONTO_PERCT_25,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(75)]  AS MONTO_PERCT_75,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(90)]  AS MONTO_PERCT_90,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(99)]  AS MONTO_PERCT_99,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+FUNDING_COST+OTHER_COGS
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+FUNDING_COST+OTHER_COGS
        ELSE 0
      END
  )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags
GROUP BY
  1 
HAVING
  BHV_PAGO>50
ORDER BY 1 DESC ;

CREATE OR REPLACE TABLE
    SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_CONSOLIDADO AS
  SELECT 
    *,
    LAG(CANTIDAD,2) OVER ( ORDER BY MES_ORIG ) AS LAG_2_CANTIDAD,
    LAG(MONTO_ORIGINADO,2) OVER ( ORDER BY MES_ORIG ) AS LAG_2_MONTO,
    LAG(LOSS_RATIO_23D,2) OVER ( ORDER BY MES_ORIG ) AS LAG_2_RATIO,
    FIRST_VALUE(mes_orig) over (order by mes_orig desc) as MesAnalisis,
    FIRST_VALUE(CANTIDAD) over (order by mes_orig desc) as cantidadAnalisis,
    FIRST_VALUE(monto_originado) over (order by mes_orig desc) as montoAnalisis,
    FIRST_VALUE(loss_ratio_23d) over (order by mes_orig desc) as lossRatioAnalisis,
  FROM  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_CONSOLIDADO_0
  order by mes_orig desc;


-- 1- ONLINE/INSTORE

CREATE OR REPLACE TABLE 
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_TIPO_SELLER_0 AS
SELECT
  MES_ORIG,
  CASE     FLAG_INSTORE
    WHEN "1" THEN "ONLINE"
    WHEN "0" THEN "INSTORE"
    ELSE NULL
  END AS FLAG_TIPO_SELLER,
  COUNT(*) AS CANTIDAD,
  CAST(SUM(CRD_CREDIT_AMOUNT) AS BIGINT) AS MONTO_ORIGINADO,
  ROUND(AVG(PLAZO),2) AS PLAZO_PROMEDIO,
  ROUND(AVG(TNA),2) AS TASA_PROMEDIO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(50)]  AS MEDIANA_MONTO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(25)]  AS MONTO_PERCT_25,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(75)]  AS MONTO_PERCT_75,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(90)]  AS MONTO_PERCT_90,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(99)]  AS MONTO_PERCT_99,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+FUNDING_COST+OTHER_COGS
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+FUNDING_COST+OTHER_COGS
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags
  WHERE FLAG_BABY_DE=0
GROUP BY
  1,
  2
HAVING
  BHV_PAGO>50
ORDER BY
  1 DESC,
  2;

CREATE OR REPLACE TABLE
    SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_TIPO_SELLER AS
  SELECT 
    *,
   LAG(CANTIDAD,-2) OVER ( ORDER BY MES_ORIG DESC) AS LAG_2_CANTIDAD,
   LAG(MONTO_ORIGINADO,-2) OVER ( ORDER BY MES_ORIG DESC) AS LAG_2_MONTO,
    LAG(LOSS_RATIO_23D,-2) OVER ( ORDER BY MES_ORIG DESC) AS LAG_2_RATIO,
    FIRST_VALUE(cantidad) over (order by mes_orig desc) as MesAnalisis
  FROM  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_TIPO_SELLER_0;

select * from  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_TIPO_SELLER  limit 100;

-- 1. FLAG DEVICE

CREATE OR REPLACE TABLE
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_POINT AS
SELECT
  MES_ORIG,
  CASE WHEN FLAG_POINT ="QR" then "POINT" 
  Else FLAG_POINT end as FLAG_POINT,
  FLAG_BABY_DE,
  COUNT(*) AS CANTIDAD,
  COUNT(*)/MAX(TOTAL_ORIGINACIONES_MENSUALES) AS Q_FRAC,
  ROUND(AVG(PLAZO),2) AS PLAZO_PROMEDIO,
  ROUND(AVG(TNA),2) AS TASA_PROMEDIO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(50)]  as Mediana_Monto,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(25)]  as monto_perct_25,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(75)]  as monto_perct_75,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(90)]  as monto_perct_90,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(99)]  as monto_perct_99,
  APPROX_QUANTILES(DEFAULT_HOY_AMOUNT, 100)[OFFSET(50)]  as Mediana_default,
  CAST(SUM(CRD_CREDIT_AMOUNT) AS BIGINT) AS MONTO_ORIGINADO,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+FUNDING_COST+OTHER_COGS
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+FUNDING_COST+OTHER_COGS
        ELSE 0
      END
  )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags
WHERE
  FLAG_POINT IS NOT NULL
GROUP BY
  1,
  2,
  3
HAVING
  BHV_PAGO>50
ORDER BY
  1 DESC ,
  2,
  3;



-- Flag OFERTA  - BAU Ó FLEX
CREATE OR REPLACE TABLE
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_OFERTA AS
SELECT
  MES_ORIG,
  CASE WHEN FLAG_OFERTA in ("REGLA BAU", "1ST RULE") then "REGLA BAU" 
  ELSE "REGLA FLEX" END as FLAG_OFERTA,
  COUNT(*)                               AS Q,
  ROUND(AVG(PLAZO),2) AS PLAZO_PROMEDIO,
  ROUND(AVG(TNA),2) AS TASA_PROMEDIO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(50)]  as Mediana_Monto,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(25)]  as monto_perct_25,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(75)]  as monto_perct_75,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(90)]  as monto_perct_90,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(99)]  as monto_perct_99,
  APPROX_QUANTILES(DEFAULT_HOY_AMOUNT, 100)[OFFSET(50)]  as Mediana_default,
  CAST(SUM(CRD_CREDIT_AMOUNT) AS BIGINT) AS MONTO_ORIGINADO,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags
WHERE
  FLAG_BABY_DE=0
GROUP BY
  1,
  2
HAVING
  BHV_PAGO>50
ORDER BY
  1 desc,
  2;

-- 3. Vista por Rating de Chunrn

CREATE OR REPLACE TABLE
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_CHURN0 AS
SELECT
  MES_ORIG,
  FLAG_RATING_CHURN,
  COUNT(*) as Q, 
  SUM(CRD_CREDIT_AMOUNT) AS MONTO_ORIGINADO,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags 
WHERE
  FLAG_RATING_CHURN IS NOT NULL
GROUP BY
  1,
  2
HAVING
  BHV_PAGO>50
ORDER BY
  1 desc,
  2;




CREATE OR REPLACE TABLE
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_CHURN AS
with tablaMensual as (
select
  mes_orig ,
  sum(Q) as totalMensual
 from  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_CHURN0
 GROUP BY
   mes_orig )
  select a.*, a.Q/b.totalMensual as frac_total
    from SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_CHURN as a
    inner join tablaMensual as b
     on a.mes_orig = b.mes_orig
  ORDER BY
  1 desc,
  2;


-- 4. BORROWER TYPE

CREATE OR REPLACE TABLE
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_BORROWER_TYPE AS
SELECT
  MES_ORIG,
  FLAG_TIPO_BORROWER,
  count(*) as Q,
  CAST(SUM(CRD_CREDIT_AMOUNT) AS BIGINT) AS MONTO_ORIGINADO,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags
GROUP BY
  1,
  2
HAVING
  BHV_PAGO>50
ORDER BY
  1 desc,
  2;



--5. EO/FO - PREGUNTAR POR NO OFERTABLE --
-- LE METEMOS EARLY OFFER A LOS NO OFERTABLE. 

CREATE OR REPLACE TABLE
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_TIPO_OFERTA AS
SELECT
  MES_ORIG,
  CASE
    WHEN FLAG_TIPO_OFERTA="NO OFERTABLE" THEN "EARLY OFFER"
    ELSE FLAG_TIPO_OFERTA
  END AS FLAG_TIPO_OFERTAS,
    ROUND(AVG(PLAZO),2) AS PLAZO_PROMEDIO,
  ROUND(AVG(TNA),2) AS TASA_PROMEDIO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(50)]  as Mediana_Monto,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(25)]  as monto_perct_25,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(75)]  as monto_perct_75,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(90)]  as monto_perct_90,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(99)]  as monto_perct_99,
  APPROX_QUANTILES(DEFAULT_HOY_AMOUNT, 100)[OFFSET(50)]  as Mediana_default,
  count(*) as CANTIDAD,
  CAST(SUM(CRD_CREDIT_AMOUNT) AS BIGINT) AS MONTO_ORIGINADO,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags
GROUP BY
  1,
  2
HAVING
  BHV_PAGO>50
ORDER BY
  1 desc,
  2;


-- 6 SEGEMENTACIÓN TPV -- PREGUNTAR MUCHOS NULLS - RAZÓN SE APLICO EN MAYO EL SEGMENTACIÓN 
-- CALCULAR MAYO PARA ATRAS EL SEGMENTO
-- MIRAR EL DOCUMENTO DE MERY, USAMOS MONTHLY, TPV_LC_M1
-- USANDO LA TABLA MC_PARAM_TPV_SEGMENT

CREATE OR REPLACE TABLE
  SBOX_CREDITS_SB.BASE_VINTAGE_MLM_DE_FLAG_SEGMENTO AS
SELECT
  MES_ORIG,
  TPV_SEGMENT,
  ROUND(AVG(PLAZO),2) AS PLAZO_PROMEDIO,
  ROUND(AVG(TNA),2) AS TASA_PROMEDIO,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(50)]  as Mediana_Monto,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(25)]  as monto_perct_25,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(75)]  as monto_perct_75,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(90)]  as monto_perct_90,
  APPROX_QUANTILES(CRD_CREDIT_AMOUNT, 100)[OFFSET(99)]  as monto_perct_99,
  count(*) as CANTIDAD,
  CAST(SUM(CRD_CREDIT_AMOUNT) AS BIGINT) AS MONTO_ORIGINADO,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN DEFAULT_HOY_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_HOY_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_HOY,
  CAST(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN FPD_AMOUNT+funding_cost+other_cogs
        ELSE 0
      END
    )/SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_REVENUES
        ELSE NULL
      END
    )*100.00 AS INTEGER
  ) AS LOSS_RATIO_23D,
  ROUND(
    SUM(
      CASE
        WHEN FLAG_COMPORTAMIENTO_PAGO=1 THEN CRD_CREDIT_AMOUNT
        ELSE 0
      END
    )/SUM(CRD_CREDIT_AMOUNT)*100.00,
    2
  ) AS BHV_PAGO
FROM
  SBOX_CREDITS_SB.Base_Vintage_Flags
GROUP BY
  1,
  2
HAVING
  BHV_PAGO>50
ORDER BY
  1 desc,
  2;




-- 8. Baby offer 

create or replace table
  sbox_credits_sb.base_vintage_mlm_de_flag_baby as
select
  mes_orig,
  COUNT(*) AS CANTIDAD,
  cast(sum(crd_credit_amount) as bigint) as monto_originado,
  round(avg(plazo),2) as plazo_promedio,
  round(avg(tna),2) as tasa_promedio,
  approx_quantiles(crd_credit_amount, 100)[offset(50)]  as mediana_monto,
  approx_quantiles(crd_credit_amount, 100)[offset(25)]  as monto_perct_25,
  approx_quantiles(crd_credit_amount, 100)[offset(75)]  as monto_perct_75,
  approx_quantiles(crd_credit_amount, 100)[offset(90)]  as monto_perct_90,
  approx_quantiles(crd_credit_amount, 100)[offset(99)]  as monto_perct_99,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then default_hoy_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_hoy_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_hoy,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then fpd_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_23d,
  round(
    sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_amount
        else 0
      end
    )/sum(crd_credit_amount)*100.00,
    2
  ) as bhv_pago
from
  SBOX_CREDITS_SB.Base_Vintage_Flags
where
  flag_baby_de=1
group by
  1
having
  bhv_pago>50
order by
  1 DESC;



-- 9 CAPEADOS
create or replace table
 SBOX_CREDITS_SB.base_vintage_capeados as
select
  mes_orig,
  FLAG_RATING_CHURN,
  max(cap) as CAP,
  sum(flag_cap) as cantidad_capeados,
  (sum(flag_cap)/count(*)) as porcentaje_Capeados,
  COUNT(*) AS CANTIDAD,
  cast(sum(crd_credit_amount) as bigint) as monto_originado,
  round(avg(plazo),2) as plazo_promedio,
  round(avg(tna),2) as tasa_promedio,
  approx_quantiles(crd_credit_amount, 100)[offset(50)]  as mediana_monto,
  approx_quantiles(crd_credit_amount, 100)[offset(25)]  as monto_perct_25,
  approx_quantiles(crd_credit_amount, 100)[offset(75)]  as monto_perct_75,
  approx_quantiles(crd_credit_amount, 100)[offset(90)]  as monto_perct_90,
  approx_quantiles(crd_credit_amount, 100)[offset(99)]  as monto_perct_99,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(50)]  as mediana_propuesta,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(25)]  as propuesta_perct_25,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(75)]  as propuesta_perct_75,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(90)]  as propuesta_perct_90,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(99)]  as propuesta_perct_99,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then default_hoy_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_hoy_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_hoy,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then fpd_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_23d,
  round(
    sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_amount
        else 0
      end
    )/sum(crd_credit_amount)*100.00,
    2
  ) as bhv_pago
from
  SBOX_CREDITS_SB.Base_Vintage_Flags 
  where FLAG_RATING_CHURN is not null
group by
  1, 2
having
  bhv_pago>50
order by
  1, 2;


create or replace table
 SBOX_CREDITS_SB.base_vintage_capeados_churn as
select
  mes_orig,
  FLAG_RATING_CHURN,
  FLAG_TIPO_OFERTA,
  max(cap) as CAP,
  sum(flag_cap) as cantidad_capeados,
  (sum(flag_cap)/count(*)) as porcentaje_Capeados,
  COUNT(*) AS CANTIDAD,
  cast(sum(crd_credit_amount) as bigint) as monto_originado,
  round(avg(plazo),2) as plazo_promedio,
  round(avg(tna),2) as tasa_promedio,
  approx_quantiles(crd_credit_amount, 100)[offset(50)]  as mediana_monto,
  approx_quantiles(crd_credit_amount, 100)[offset(25)]  as monto_perct_25,
  approx_quantiles(crd_credit_amount, 100)[offset(75)]  as monto_perct_75,
  approx_quantiles(crd_credit_amount, 100)[offset(90)]  as monto_perct_90,
  approx_quantiles(crd_credit_amount, 100)[offset(99)]  as monto_perct_99,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(50)]  as mediana_propuesta,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(25)]  as propuesta_perct_25,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(75)]  as propuesta_perct_75,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(90)]  as propuesta_perct_90,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(99)]  as propuesta_perct_99,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then default_hoy_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_hoy_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_hoy,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then fpd_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_23d,
  round(
    sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_amount
        else 0
      end
    )/sum(crd_credit_amount)*100.00,
    2
  ) as bhv_pago
from
  SBOX_CREDITS_SB.Base_Vintage_Flags 
  where FLAG_RATING_CHURN is not null
group by
  1, 2,3
having
  bhv_pago>50
order by
  1, 2,3;

create or replace table
 SBOX_CREDITS_SB.base_vintage_capeados_tpv as
select
  mes_orig,
  TPV_SEGMENT,
  max(cap) as CAP,
  sum(flag_cap) as cantidad_capeados,
  (sum(flag_cap)/count(*)) as porcentaje_Capeados,
  COUNT(*) AS CANTIDAD,
  cast(sum(crd_credit_amount) as bigint) as monto_originado,
  round(avg(plazo),2) as plazo_promedio,
  round(avg(tna),2) as tasa_promedio,
  approx_quantiles(crd_credit_amount, 100)[offset(50)]  as mediana_monto,
  approx_quantiles(crd_credit_amount, 100)[offset(25)]  as monto_perct_25,
  approx_quantiles(crd_credit_amount, 100)[offset(75)]  as monto_perct_75,
  approx_quantiles(crd_credit_amount, 100)[offset(90)]  as monto_perct_90,
  approx_quantiles(crd_credit_amount, 100)[offset(99)]  as monto_perct_99,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(50)]  as mediana_propuesta,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(25)]  as propuesta_perct_25,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(75)]  as propuesta_perct_75,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(90)]  as propuesta_perct_90,
  approx_quantiles(CRD_PROP_TOTAL_AMOUNT, 100)[offset(99)]  as propuesta_perct_99,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then default_hoy_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_hoy_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_hoy,
  cast(
    sum(
      case
        when flag_comportamiento_pago=1 then fpd_amount+FUNDING_COST+OTHER_COGS
        else 0
      end
    )/sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_revenues
        else null
      end
    )*100.00 as integer
  ) as loss_ratio_23d,
  round(
    sum(
      case
        when flag_comportamiento_pago=1 then crd_credit_amount
        else 0
      end
    )/sum(crd_credit_amount)*100.00,
    2
  ) as bhv_pago
from
  SBOX_CREDITS_SB.Base_Vintage_Flags 
  where FLAG_RATING_CHURN is not null
group by
  1, 2
having
  bhv_pago>50
order by
  1, 2;



---------------------------------------------;
----------- Funciones AUXILIARES -------
---------------------------------------------
-- crea variable año-mes.
CREATE OR REPLACE FUNCTION SBOX_CREDITS_SB.FECHA_PARSE (col_date TIMESTAMP) RETURNS INT64 AS (
  EXTRACT(
    YEAR
    FROM
      CAST(col_date AS TIMESTAMP)
  )*100+EXTRACT(
    MONTH
    FROM
      CAST(col_date AS TIMESTAMP)
  )
);
 

-- crea variable año-mes.
CREATE OR REPLACE FUNCTION SBOX_CREDITS_SB.FECHA_PARSE_to_string (col_date TIMESTAMP) RETURNS string AS (
  Cast(EXTRACT(
    YEAR
    FROM
      CAST(col_date AS TIMESTAMP)
  ) as string) || "_" || cast(EXTRACT(
    MONTH
    FROM
      CAST(col_date AS TIMESTAMP)
  )
as string));
 

